const { Telegraf } = require("telegraf");
const fs = require("fs");
const path = require("path");

// –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∑ –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –∞–±–æ –Ω–∞–¥–∞–Ω–∏–π —Ç–æ–∫–µ–Ω
const BOT_TOKEN =
  process.env.TELEGRAM_BOT_TOKEN ||
  "7075973337:AAFZIgJmAChOzhQGO0CrJV93U5TI_SuGgSw";

// –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ ID –≥—Ä—É–ø–∏, —è–∫–∏–π –≤–∏ –Ω–∞–¥–∞–ª–∏
let GROUP_CHAT_ID = process.env.TELEGRAM_GROUP_ID || "-1002601160734";

// –®–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è ID –≥—Ä—É–ø–∏
const chatIdFilePath = path.join(__dirname, "chat_id.txt");

// –°–ø—Ä–æ–±—É—î–º–æ –ø—Ä–æ—á–∏—Ç–∞—Ç–∏ ID –≥—Ä—É–ø–∏ –∑ —Ñ–∞–π–ª—É, —è–∫—â–æ –≤—ñ–Ω —ñ—Å–Ω—É—î
if (fs.existsSync(chatIdFilePath)) {
  try {
    const savedChatId = fs.readFileSync(chatIdFilePath, "utf8").trim();
    if (savedChatId) {
      GROUP_CHAT_ID = savedChatId;
      console.log(`‚úÖ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ ID –≥—Ä—É–ø–∏ –∑ —Ñ–∞–π–ª—É: ${GROUP_CHAT_ID}`);
    }
  } catch (err) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è ID –≥—Ä—É–ø–∏ –∑ —Ñ–∞–π–ª—É:", err.message);
  }
}

const bot = new Telegraf(BOT_TOKEN);

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞
bot.launch().catch((err) => {
  console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞:", err);
});

// –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫
bot.catch((err, ctx) => {
  console.error("–ü–æ–º–∏–ª–∫–∞ –±–æ—Ç–∞:", err);
});

// –°–ª—É—Ö–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ –≥—Ä—É–ø–∞—Ö –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è GROUP_CHAT_ID
bot.on("message", (ctx) => {
  if (
    ctx.message.chat.type === "supergroup" ||
    ctx.message.chat.type === "group"
  ) {
    const chatId = ctx.message.chat.id.toString();

    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ ID –≥—Ä—É–ø–∏ —É —Ñ–∞–π–ª –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –º—ñ–∂ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–º–∏
    try {
      fs.writeFileSync(chatIdFilePath, chatId);
      console.log("‚úÖ ID –≥—Ä—É–ø–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É —Ñ–∞–π–ª");

      // –û–Ω–æ–≤–ª—é—î–º–æ ID –≥—Ä—É–ø–∏, —è–∫—â–æ –≤—ñ–Ω –≤—ñ–¥—Ä—ñ–∑–Ω—è—î—Ç—å—Å—è
      if (GROUP_CHAT_ID !== chatId) {
        console.log(
          `‚ÑπÔ∏è –í–∏—è–≤–ª–µ–Ω–æ –Ω–æ–≤—É –≥—Ä—É–ø—É. –ü–æ–ø–µ—Ä–µ–¥–Ω—ñ–π ID: ${GROUP_CHAT_ID}, –ù–æ–≤–∏–π ID: ${chatId}`
        );
        GROUP_CHAT_ID = chatId;

        // –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î–º–æ –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —â–æ–± –ø—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏, —â–æ –±–æ—Ç –ø—Ä–∞—Ü—é—î
        ctx.reply("‚úÖ –ë–æ—Ç –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π –¥–ª—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å —É —Ü—é –≥—Ä—É–ø—É.");
      }
    } catch (err) {
      console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è ID –≥—Ä—É–ø–∏ —É —Ñ–∞–π–ª:", err.message);
    }
  }
});

/**
 * –ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ –≥—Ä—É–ø—É Telegram
 * @param {Object} messageData - –î–∞–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
 * @param {string} messageData.username - –Ü–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 * @param {string} messageData.email - Email
 * @param {string} messageData.messageType - –¢–∏–ø –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (text, voice, video)
 * @param {string} [messageData.messageContent] - –í–º—ñ—Å—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
 * @param {string} [messageData.filePath] - –®–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∞–±–æ –≤—ñ–¥–µ–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
 * @returns {Promise<Object>} - –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø–µ—Ä–∞—Ü—ñ—ó
 */
async function sendMessage(messageData) {
  try {
    const { username, email, messageType, messageContent, filePath } =
      messageData;

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ GROUP_CHAT_ID
    if (!GROUP_CHAT_ID) {
      throw new Error(
        "ID –≥—Ä—É–ø–∏ –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ. –î–æ–¥–∞–π—Ç–µ –±–æ—Ç–∞ –¥–æ –≥—Ä—É–ø–∏ —Ç–∞ –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è."
      );
    }

    // –§–æ—Ä–º—É—î–º–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    const messageHeader = `üì© –ù–∞–¥—ñ—Å–ª–∞–Ω–æ –∑ –≤–µ–±-—Ñ–æ—Ä–º–∏\n\n–í—ñ–¥: ${username}\nEmail: ${email}\n–¢–∏–ø: ${getMessageTypeText(
      messageType
    )}\n\n`;

    // –ù–∞–¥—Å–∏–ª–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Ç–∏–ø—É
    try {
      if (messageType === "text") {
        await bot.telegram.sendMessage(
          GROUP_CHAT_ID,
          `${messageHeader}${messageContent}`
        );
      } else if (messageType === "voice") {
        await bot.telegram.sendVoice(
          GROUP_CHAT_ID,
          { source: filePath },
          { caption: messageHeader }
        );
      } else if (messageType === "video") {
        await bot.telegram.sendVideo(
          GROUP_CHAT_ID,
          { source: filePath },
          { caption: messageHeader }
        );
      } else {
        throw new Error("–ù–µ–≤—ñ—Ä–Ω–∏–π —Ç–∏–ø –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è");
      }

      return { success: true };
    } catch (error) {
      if (error.description && error.description.includes("bot was kicked")) {
        throw new Error(
          "–ë–æ—Ç –±—É–≤ –≤–∏–¥–∞–ª–µ–Ω–∏–π –∑ –≥—Ä—É–ø–∏. –ë—É–¥—å –ª–∞—Å–∫–∞, –¥–æ–¥–∞–π—Ç–µ –±–æ—Ç–∞ –Ω–∞–∑–∞–¥ –¥–æ –≥—Ä—É–ø–∏."
        );
      } else if (
        error.description &&
        error.description.includes("not enough rights")
      ) {
        throw new Error(
          "–ë–æ—Ç –Ω–µ –º–∞—î –¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø—Ä–∞–≤. –ë—É–¥—å –ª–∞—Å–∫–∞, –∑—Ä–æ–±—ñ—Ç—å –±–æ—Ç–∞ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≥—Ä—É–ø–∏."
        );
      } else {
        throw error;
      }
    }
  } catch (error) {
    console.error("–ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ Telegram:", error);
    throw new Error(
      `–ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ Telegram: ${error.message}`
    );
  }
}

/**
 * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ª—é–¥–∏–Ω–æ-—á–∏—Ç–∞–±–µ–ª—å–Ω–æ–≥–æ —Ç–∏–ø—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
 * @param {string} messageType - –¢–∏–ø –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
 * @returns {string} - –õ—é–¥–∏–Ω–æ-—á–∏—Ç–∞–±–µ–ª—å–Ω–∏–π —Ç–∏–ø –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
 */
function getMessageTypeText(messageType) {
  switch (messageType) {
    case "text":
      return "–¢–µ–∫—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è";
    case "voice":
      return "–ì–æ–ª–æ—Å–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è";
    case "video":
      return "–í—ñ–¥–µ–æ–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è";
    default:
      return messageType;
  }
}

module.exports = {
  sendMessage,
  bot,
  GROUP_CHAT_ID,
};
